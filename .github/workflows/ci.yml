name: CI

on: [push, pull_request]

jobs:
  build-retro-game:
    name: Build retro-game (JDK ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [17]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Build with Maven
      run: mvn -B -DskipTests package

  build-battle-engine:
    name: Build battle engine (${{ matrix.build }}) (JDK ${{ matrix.java }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [17]
        build: [macos-clang, ubuntu-clang, ubuntu-gcc, windows-cl, windows-gcc]
        include:
        - build: macos-clang
          os: macos-latest
          cxx: clang++
          gen: Unix Makefiles
        - build: ubuntu-clang
          os: ubuntu-latest
          cxx: clang++
          gen: Unix Makefiles
        - build: ubuntu-gcc
          os: ubuntu-latest
          cxx: g++
          gen: Unix Makefiles
        - build: windows-cl
          os: windows-latest
          gen: Visual Studio 17 2022
        - build: windows-gcc
          os: windows-latest
          cxx: g++
          gen: Unix Makefiles
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Configure
      env:
        CXX: ${{ matrix.cxx }}
      run: cmake -S battle-engine -B build -G "${{ matrix.gen }}" -DCMAKE_BUILD_TYPE=Release
    - name: Build
      run: cmake --build build --config release

  build-docker-image:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Build
      run: docker build .
